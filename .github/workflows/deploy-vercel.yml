# =====================================================
# GITHUB ACTIONS - D√âPLOIEMENT VERCEL
# =====================================================
#
# üåê QU'EST-CE QUE CE FICHIER ?
# ------------------------------
# Ce pipeline automatise le d√©ploiement de votre application sur Vercel.
# Vercel peut d√©ployer des applications Node.js compl√®tes, contrairement √† GitHub Pages.
#
# üéØ POURQUOI VERCEL ?
# --------------------
# Vercel permet de :
# - D√©ployer des applications Node.js compl√®tes
# - Avoir des API routes en temps r√©el
# - D√©ployer automatiquement √† chaque push
# - Avoir HTTPS automatique
# - Avoir un CDN global
#
# üîÑ COMMENT √áA MARCHE ?
# -----------------------
# 1. Vous poussez du code sur GitHub
# 2. Le robot d√©ploie sur Vercel
# 3. Votre API est accessible en ligne avec toutes ses routes
# 4. L'animation Star Wars et l'API fonctionnent parfaitement

name: Deploy to Vercel

# üöÄ D√âCLENCHEURS - QUAND D√âPLOYER ?
# -----------------------------------
on:
  push:
    branches:
      - main          # Se d√©clenche seulement sur la branche principale
  workflow_run:
    workflows: ["Tests and Build"]  # Se d√©clenche apr√®s les tests
    types:
      - completed

# üèóÔ∏è JOBS - TRAVAUX √Ä EFFECTUER
# ------------------------------
jobs:
  # Job principal : d√©ployer sur Vercel
  deploy:
    # üñ•Ô∏è ENVIRONNEMENT D'EX√âCUTION
    # -----------------------------
    runs-on: ubuntu-latest
    
    # üìã CONDITIONS D'EX√âCUTION
    # --------------------------
    # On ne d√©ploie que si les tests ont r√©ussi
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    
    # üìã √âTAPES - ACTIONS √Ä EFFECTUER
    # --------------------------------
    steps:
    
    # √âTAPE 1 : R√âCUP√âRER LE CODE
    # ----------------------------
    # On t√©l√©charge le code depuis GitHub
    - name: Checkout
      uses: actions/checkout@v4
      
    # √âTAPE 2 : CONFIGURER NODE.JS
    # -----------------------------
    # On installe Node.js pour pouvoir tester l'application
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'        # Version de Node.js √† utiliser
        cache: 'npm'              # Cache les d√©pendances npm
        
    # √âTAPE 3 : INSTALLER LES D√âPENDANCES
    # ------------------------------------
    # On installe toutes les d√©pendances du projet
    - name: Install dependencies
      run: npm ci                  # Installation propre des d√©pendances
      
    # √âTAPE 4 : LANCER LES TESTS
    # ---------------------------
    # On s'assure que tout fonctionne avant le d√©ploiement
    - name: Run tests
      run: npm test               # Lance tous les tests
      
    # √âTAPE 5 : D√âPLOYER SUR VERCEL
    # ------------------------------
    # On d√©ploie l'application sur Vercel
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}        # Token Vercel (√† configurer)
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}      # ID de l'organisation Vercel
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}  # ID du projet Vercel
        vercel-args: '--prod'                           # D√©ploiement en production
        working-directory: ./                           # Dossier de travail 